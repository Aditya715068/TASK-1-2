Task 1
Do a write up for the followings:


Q1: Difference between HTTP1.1 vs HTTP2?

  HTTP 1.1  : Comes on 1997. It supports connection reuse i.e. for every TCP connection there could be   multiple requests and responses, and pipelining where the client can request several resources from the   server at once. However, pipelining was hard to implement due to issues such as head-of-line blocking and   was not a feasible solution.

  HTTP 2  : Comes on 2015. Its uses multiplexing, where over a single TCP connection resources to be   delivered are interleaved and arrive at the client almost at the same time. It is done using streams which   can be prioritized, can have dependencies and individual flow control. It also provides a feature called   server push that allows the server to send data that the client will need but has not yet requested.


Q2: HTTP version history?


  HTTP 0.9: The One-Line Protocol: The original HTTP proposal by Tim Berners-Lee was designed with   simplicity in mind as to help with the adoption of his other nascent idea: the World Wide Web. 

  HTTP 1.0: Rapid Growth and Informational RFC: The period from 1991 to 1995 is one of rapid coevolution of    the HTML specification, a new breed of software known as a "web browser," and the emergence and quick   growth of the consumer-oriented public Internet infrastructure.

  HTTP 1.1: Internet Standard: The work on turning HTTP into an official IETF Internet standard proceeded in   parallel with the documentation effort around HTTP/1.0 and happened over a period of roughly four years:   between 1995 and 1999.

  HTTP 2: Improving Transport Performance: Since its publication, RFC 2616 has served as a foundation for   the unprecedented growth of the Internet: billions of devices of all shapes and sizes, from desktop   computers to the tiny web devices in our pockets, speak HTTP every day to deliver news, video, and   millions  of other web applications we have all come to depend on in our lives.





Q3: List 5 differences between Browser JS vs Node Js.



   1. JavaScript is a simple programming language which runs in any browser JavaScript Engine. Whereas Node    JS is an interpreter or running environment for a JavaScript programming language which holds a lot of    excesses require libraries which can easily be accessed from JavaScript programming for better use.

   2. JavaScript is normally used for any client-side activity for one web application. Activity can be    addressing business validation or dynamic page display in some schedule time interval or basic Ajax call    kind of task. Those are used on a maximum time for any web application. Whereas Node JS mainly used for    accessing or running any operating system for non-blocking operation. An operation like create or    executing shell script, or getting some specific hardware related information on one call or installed    certificate details in the system or lot of define task which are non-blocking on an operating system.

   3. JavaScript running in any engine like Spider monkey (FireFox), JavaScript Core (Safari), V8 (Google    Chrome). So JavaScript programming is very easy to write and put any running environment means proper    browser. Whereas Node JS only support V8 engine which googles chrome specific. But whether it support V8    engine, written JavaScript code can able to run in any environment. So there has no browser specific    constraint on it.

   4. JavaScript is normally following Java Programming language standard. There may have some different way    of writing code but at the same time, we can say it following Java Programming language standard. Whereas    node JS is written in C++, and provide V8 engine base browser javascript running engine which helps us to    run written javascript program in any browser environment.

   5. For accessing any operating system specific non-blocking task JavaScript has some specific object but     all of them are operating system specific. An example is ActiveX Control which is only running in    Windows.   But Node JS is given utility to run some operating system specific non-blocking tasks from any    JavaScript   programming. It doesnâ€™t have any operating system specific constant. Node JS is very much    familiar to   create a specific binding with the file system, and also allowing developer for reading or    sometimes write   on disk.




Q4: what happens when you type a URL in the address bar in the browser?


   1. You enter the URL in the browser.
   2. The browser looks for the IP address of the domain name in the DNS(Domain Name Server).
   3. The Browser initiates a TCP connection with the server.
   4. The browser sends an HTTP request to the server.
   5. The server handles the incoming request and sends an HTTP response.
   6. The browser displays the HTML content.

